<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>bigdata on Smart Tiger&#39;s blog</title>
    <link>https://eoriented.github.io/categories/bigdata/</link>
    <description>Recent content in bigdata on Smart Tiger&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-KR</language>
    <managingEditor>eoriented@gmail.com (eoriented)</managingEditor>
    <webMaster>eoriented@gmail.com (eoriented)</webMaster>
    <lastBuildDate>Mon, 06 Apr 2020 23:01:48 +0900</lastBuildDate>
    
	<atom:link href="https://eoriented.github.io/categories/bigdata/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>HBase 데이터 모델</title>
      <link>https://eoriented.github.io/post/hbase-data-model/</link>
      <pubDate>Mon, 06 Apr 2020 23:01:48 +0900</pubDate>
      <author>eoriented@gmail.com (eoriented)</author>
      <guid>https://eoriented.github.io/post/hbase-data-model/</guid>
      <description>이번 포스트에서는 HBase의 데이터 모델에 대해 살펴볼 예정입니다.
먼저 데이터 모델이란 무엇일까요? 데이터 모델이란 데이터를 인식하고 조작하는데 사용되는 모델을 말합니다.
데이터베이스를 사용하는 사람에게 데이터 모델은 데이터베이스 내의 데이터와 상호작용하는 방법을 이야기하는 것입니다.
HBase에서 데이터 모델을 어떻게 표현하는지 살펴보기 전에 HBase에서 사용하는 용어를 먼저 살펴보도록 하겠습니다.</description>
    </item>
    
    <item>
      <title>Spark에서 groupByKey 대신 reduceByKey 사용하기</title>
      <link>https://eoriented.github.io/post/avoid-groupbykey/</link>
      <pubDate>Sat, 14 Mar 2020 22:15:26 +0900</pubDate>
      <author>eoriented@gmail.com (eoriented)</author>
      <guid>https://eoriented.github.io/post/avoid-groupbykey/</guid>
      <description>이번 포스트에서는 스파크에서 빈번히 사용되는 transformation인 reduceByKey와 groupByKey의 동작에 대해 살펴보겠습니다. 먼저 스파크에서 reduceByKey와 groupByKey를 사용하여 단어 세기 예제를 작성해보도록 하겠습니다.
val words = Array(&amp;#34;one&amp;#34;, &amp;#34;two&amp;#34;, &amp;#34;two&amp;#34;, &amp;#34;three&amp;#34;, &amp;#34;three&amp;#34;, &amp;#34;three&amp;#34;) val wordPairsRDD = sc.parallelize(words).map(word =&amp;gt; (word, 1)) val wordCountsWithReduce = wordPairsRDD .</description>
    </item>
    
    <item>
      <title>Introduction to Kafka</title>
      <link>https://eoriented.github.io/post/introduction-to-kafka/</link>
      <pubDate>Thu, 12 Mar 2020 21:07:27 +0900</pubDate>
      <author>eoriented@gmail.com (eoriented)</author>
      <guid>https://eoriented.github.io/post/introduction-to-kafka/</guid>
      <description>1. Apache Kafka 아파치 카프카(이하 카프카)는 여러 대의 분산 서버에서 대량의 데이터를 처리하는 분산 메시징 시스템입니다.
  카프카는 여러 시스템과 장치를 연결하는 중요한 역할을 수행합니다. 카프카는 높은 처리량과 실시간 처리를 할 수 있습니다. 이러한 카프카는 다음의 4가지 특징을 가지고 있습니다.</description>
    </item>
    
    <item>
      <title>Apache Oozie 소개</title>
      <link>https://eoriented.github.io/post/introduction-to-oozie/</link>
      <pubDate>Sat, 23 Sep 2017 23:15:56 +0900</pubDate>
      <author>eoriented@gmail.com (eoriented)</author>
      <guid>https://eoriented.github.io/post/introduction-to-oozie/</guid>
      <description>Oozie 개요 Oozie는 정식 홈페이지에 나와 있듯이 Hadoop ecosystem에서 사용하는 Workflow Scheduler(혹은 orchestration) 프레임워크입니다. Oozie에서 제공하는 기능은 크게 아래의 3가지와 같습니다.
 Scheduling  특정 시간에 액션 수행 주기적인 간격 이후에 액션 수행 이벤트가 발생하면 액션 수행   Coordinating  이전 액션이 성공적으로 끝나면 다음 액션 시작   Managing  액션이 성공하거나 실패했을 때 이메일 발송 액션 수행시간이나 액션의 단계를 저장    Oozie 용어  Action  우지에서 실행할 수 있는 하나의 작업 단위 MapReduce 작업, Spark 작업, Shell script 등   Workflow  Action들의 제어와 의존 관계를 DAG(Directed acyclic graph) 표현   Coordinator  Data sets과 Workflow를 실행하는 스케줄을 정의   Bundle  코디네이터의 모임    Oozie Architecture  우지는 Client-Server Model의 형태입니다.</description>
    </item>
    
  </channel>
</rss>