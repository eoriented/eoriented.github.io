<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>window on Smart Tiger&#39;s blog</title>
    <link>https://eoriented.github.io/tags/window/</link>
    <description>Recent content in window on Smart Tiger&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-KR</language>
    <managingEditor>eoriented@gmail.com (eoriented)</managingEditor>
    <webMaster>eoriented@gmail.com (eoriented)</webMaster>
    <lastBuildDate>Sat, 19 Dec 2020 15:06:33 +0900</lastBuildDate>
    
	<atom:link href="https://eoriented.github.io/tags/window/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>스트리밍의 첫걸음 - 데이터 스트리밍 처리의 개념 정리</title>
      <link>https://eoriented.github.io/post/streaming-101/</link>
      <pubDate>Sat, 19 Dec 2020 15:06:33 +0900</pubDate>
      <author>eoriented@gmail.com (eoriented)</author>
      <guid>https://eoriented.github.io/post/streaming-101/</guid>
      <description>스트리밍 처리의 중요성이 점점 중요해지고 있습니다. Apache Spark Streaming부터 새로운 스트림 처리의 강자인 Apache Flink와 같은 스트리밍 처리 엔진 등의 사용 사례가 많아지고 있습니다. 그래서 이번 기회에 스트리밍 처리에 대한 기본 개념들에 대해 정리해보고자 합니다.</description>
    </item>
    
    <item>
      <title>이벤트 시간 처리(Event Time Processing)와 워터마크(Watermark) - (feat. Apache Flink)</title>
      <link>https://eoriented.github.io/post/event-time-processing-and-watermark/</link>
      <pubDate>Sun, 29 Nov 2020 10:35:22 +0900</pubDate>
      <author>eoriented@gmail.com (eoriented)</author>
      <guid>https://eoriented.github.io/post/event-time-processing-and-watermark/</guid>
      <description>스트림 처리에서 바라보는 시간적 측면 중에 이벤트 시간(Event time) 기반으로 처리하는 방식에 대해 살펴보겠습니다. 최근에 데이터 처리 분야에서 스트리밍 애플리케이션 개발의 중요성이 더욱 커지고 있습니다. 만약 스트리밍 애플리케이션을 개발하게 되는 경우 애플리케이션의 목적에 따라 이벤트 시간(Event time)을 기준으로 처리할 것인지 처리 시간(Processing time) 기준으로 처리할 것인지 선택을 해야 할 것입니다.</description>
    </item>
    
    <item>
      <title>스트림 프로세싱(Stream Processing) - 2</title>
      <link>https://eoriented.github.io/post/stream-processing-2/</link>
      <pubDate>Sun, 19 Jul 2020 21:49:32 +0900</pubDate>
      <author>eoriented@gmail.com (eoriented)</author>
      <guid>https://eoriented.github.io/post/stream-processing-2/</guid>
      <description>데이터베이스와 스트림 메시지 브로커와 데이터베이스는 전혀 다른 범주의 도구로 바라볼 수 있지만 로그 기반 메시지 브로커는 데이터베이스에서 아이디어를 얻어 메시지 시스템에 적용하는데 성공하였습니다. 데이터베이스의 복제 로그(replication log)는 데이터베이스에 쓰는 이벤트 스트림으로 볼 수 있습니다.
변경 데이터 캡처(CDC, Change Data Capture) 변경 데이터 캡쳐는 데이터베이스에 기록하는 모든 데이터의 변경사항을 관찰해 다른 시스템으로 데이터를 복제할 수 있는 형태로 추출하는 과정을 말합니다.</description>
    </item>
    
  </channel>
</rss>