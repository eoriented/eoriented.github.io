<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>combinebykey on Smart Tiger&#39;s blog</title>
    <link>https://eoriented.github.io/tags/combinebykey/</link>
    <description>Recent content in combinebykey on Smart Tiger&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-KR</language>
    <managingEditor>eoriented@gmail.com (eoriented)</managingEditor>
    <webMaster>eoriented@gmail.com (eoriented)</webMaster>
    <lastBuildDate>Sat, 14 Mar 2020 22:15:26 +0900</lastBuildDate>
    
	<atom:link href="https://eoriented.github.io/tags/combinebykey/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Spark에서 groupByKey 대신 reduceByKey 사용하기</title>
      <link>https://eoriented.github.io/post/avoid-groupbykey/</link>
      <pubDate>Sat, 14 Mar 2020 22:15:26 +0900</pubDate>
      <author>eoriented@gmail.com (eoriented)</author>
      <guid>https://eoriented.github.io/post/avoid-groupbykey/</guid>
      <description>이번 포스트에서는 스파크에서 빈번히 사용되는 transformation인 reduceByKey와 groupByKey의 동작에 대해 살펴보겠습니다. 먼저 스파크에서 reduceByKey와 groupByKey를 사용하여 단어 세기 예제를 작성해보도록 하겠습니다.
val words = Array(&amp;#34;one&amp;#34;, &amp;#34;two&amp;#34;, &amp;#34;two&amp;#34;, &amp;#34;three&amp;#34;, &amp;#34;three&amp;#34;, &amp;#34;three&amp;#34;) val wordPairsRDD = sc.parallelize(words).map(word =&amp;gt; (word, 1)) val wordCountsWithReduce = wordPairsRDD .</description>
    </item>
    
  </channel>
</rss>