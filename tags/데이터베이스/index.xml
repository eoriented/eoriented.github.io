<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>데이터베이스 on Smart Tiger&#39;s blog</title>
    <link>https://eoriented.github.io/tags/%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4/</link>
    <description>Recent content in 데이터베이스 on Smart Tiger&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-KR</language>
    <managingEditor>eoriented@gmail.com (eoriented)</managingEditor>
    <webMaster>eoriented@gmail.com (eoriented)</webMaster>
    <lastBuildDate>Wed, 18 Nov 2020 10:12:53 +0900</lastBuildDate>
    
	<atom:link href="https://eoriented.github.io/tags/%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>저장소(Storage)와 검색(Retrieval) - 3</title>
      <link>https://eoriented.github.io/post/storage-and-retrieval-3/</link>
      <pubDate>Mon, 26 Aug 2019 22:56:19 +0900</pubDate>
      <author>eoriented@gmail.com (eoriented)</author>
      <guid>https://eoriented.github.io/post/storage-and-retrieval-3/</guid>
      <description>이전 포스트에 이어서 세 번째 포스트입니다. 이전 포스트에서는 SS테이블과 LSM 트리에 관해 알아보았습니다. 이번 포스트에서는 데이터베이스에서 가장 많이 사용하고 일반적인 색인 유형인 B 트리에 대해서 살펴보겠습니다.
B 트리 B 트리는 거의 대부분의 관계형 데이터베이스에서 표준 색인 구현으로 사용할 뿐만 아니라 비관계형 데이터에서도 사용합니다.</description>
    </item>
    
    <item>
      <title>저장소(Storage)와 검색(Retrieval) - 2</title>
      <link>https://eoriented.github.io/post/storage-and-retrieval-2/</link>
      <pubDate>Wed, 21 Aug 2019 22:56:25 +0900</pubDate>
      <author>eoriented@gmail.com (eoriented)</author>
      <guid>https://eoriented.github.io/post/storage-and-retrieval-2/</guid>
      <description>이전 포스트에 이어서 저장소와 검색을 계속 살펴보겠습니다. 이전 포스트 마지막 부분에 대한 설명은 해시 테이블을 통한 색인이 가진 제한사항에 대해 살펴보았습니다. 이러한 제한이 없는 색인 구조를 이어서 살펴보도록 하겠습니다.
SS 테이블과 LSM 트리   위 그림과 같이 log-structured 저장소 세그먼트는 key-value 쌍의 시퀀스입니다.</description>
    </item>
    
    <item>
      <title>저장소(Storage)와 검색(Retrieval) - 1</title>
      <link>https://eoriented.github.io/post/storage-and-retrieval-1/</link>
      <pubDate>Sun, 18 Aug 2019 22:11:51 +0900</pubDate>
      <author>eoriented@gmail.com (eoriented)</author>
      <guid>https://eoriented.github.io/post/storage-and-retrieval-1/</guid>
      <description>이전 포스트에서는 데이터 모델과 질의 언어에 대해 알아보았습니다. 예를 들어 애플리케이션 개발자 관점에서 데이터베이스에 저장하는 데이터 포맷과 데이터를 다시 요청하는 메커니즘과 같은 것들을 살펴보았습니다. 이번 장에서는 데이터베이스 관점에서 데이터를 저장하는 방법과 데이터를 요청했을 때 다시 찾을 수 있는 방법에 대해서 살펴볼 예정입니다.</description>
    </item>
    
  </channel>
</rss>