<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>hbase on Smart Tiger&#39;s blog</title>
    <link>https://eoriented.github.io/tags/hbase/</link>
    <description>Recent content in hbase on Smart Tiger&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-KR</language>
    <managingEditor>eoriented@gmail.com (eoriented)</managingEditor>
    <webMaster>eoriented@gmail.com (eoriented)</webMaster>
    <lastBuildDate>Mon, 06 Apr 2020 23:01:48 +0900</lastBuildDate>
    
	<atom:link href="https://eoriented.github.io/tags/hbase/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>HBase 데이터 모델</title>
      <link>https://eoriented.github.io/post/hbase-data-model/</link>
      <pubDate>Mon, 06 Apr 2020 23:01:48 +0900</pubDate>
      <author>eoriented@gmail.com (eoriented)</author>
      <guid>https://eoriented.github.io/post/hbase-data-model/</guid>
      <description>이번 포스트에서는 HBase의 데이터 모델에 대해 살펴볼 예정입니다.
먼저 데이터 모델이란 무엇일까요? 데이터 모델이란 데이터를 인식하고 조작하는데 사용되는 모델을 말합니다.
데이터베이스를 사용하는 사람에게 데이터 모델은 데이터베이스 내의 데이터와 상호작용하는 방법을 이야기하는 것입니다.
HBase에서 데이터 모델을 어떻게 표현하는지 살펴보기 전에 HBase에서 사용하는 용어를 먼저 살펴보도록 하겠습니다.</description>
    </item>
    
    <item>
      <title>저장소(Storage)와 검색(Retrieval) - 2</title>
      <link>https://eoriented.github.io/post/storage-and-retrieval-2/</link>
      <pubDate>Wed, 21 Aug 2019 22:56:25 +0900</pubDate>
      <author>eoriented@gmail.com (eoriented)</author>
      <guid>https://eoriented.github.io/post/storage-and-retrieval-2/</guid>
      <description>이전 포스트에 이어서 저장소와 검색을 계속 살펴보겠습니다. 이전 포스트 마지막 부분에 대한 설명은 해시 테이블을 통한 색인이 가진 제한사항에 대해 살펴보았습니다. 이러한 제한이 없는 색인 구조를 이어서 살펴보도록 하겠습니다.
SS 테이블과 LSM 트리   위 그림과 같이 log-structured 저장소 세그먼트는 key-value 쌍의 시퀀스입니다.</description>
    </item>
    
  </channel>
</rss>