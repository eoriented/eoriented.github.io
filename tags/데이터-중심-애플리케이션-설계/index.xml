<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>데이터 중심 애플리케이션 설계 on Smart Tiger&#39;s blog</title>
    <link>https://eoriented.github.io/tags/%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%A4%91%EC%8B%AC-%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98-%EC%84%A4%EA%B3%84/</link>
    <description>Recent content in 데이터 중심 애플리케이션 설계 on Smart Tiger&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-KR</language>
    <managingEditor>eoriented@gmail.com (eoriented)</managingEditor>
    <webMaster>eoriented@gmail.com (eoriented)</webMaster>
    <lastBuildDate>Sun, 05 Jul 2020 23:00:39 +0900</lastBuildDate>
    
	<atom:link href="https://eoriented.github.io/tags/%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%A4%91%EC%8B%AC-%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98-%EC%84%A4%EA%B3%84/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>스트림 프로세싱(Stream Processing) - 1</title>
      <link>https://eoriented.github.io/post/stream-processing/</link>
      <pubDate>Sun, 05 Jul 2020 23:00:39 +0900</pubDate>
      <author>eoriented@gmail.com (eoriented)</author>
      <guid>https://eoriented.github.io/post/stream-processing/</guid>
      <description>일반적으로 배치 처리의 문제점은 입력의 변화가 특정 기간이 끝나야 반영이 되는 문제가 있습니다. 이러한 지연(Lag)을 줄이려면 더 자주 실행할 수 있도록 해야 합니다. 고정된 타임 슬라이스 별로 처리하는 것이 아닌 이벤트가 발생할 때마다 처리하도록 하는 것입니다.</description>
    </item>
    
    <item>
      <title>데이터 모델(Data Models)과 질의 언어(Query Languages) - 1</title>
      <link>https://eoriented.github.io/post/data-models-and-query-languages-1/</link>
      <pubDate>Wed, 31 Jul 2019 15:06:14 +0900</pubDate>
      <author>eoriented@gmail.com (eoriented)</author>
      <guid>https://eoriented.github.io/post/data-models-and-query-languages-1/</guid>
      <description>데이터 모델은 소프트웨어 개발에 있어서 가장 중요한 부분 중에 하나입니다. 다양한 종류의 데이터 모델에 대해 이해를 하고 있고, 애플리케이션 요구사항에 가장 적합한 모델을 찾아서 개발을 해야 합니다.
데이터 모델에 따라 어떤 종류의 사용법은 쉽고 어떤 동작은 지원하지 않습니다.</description>
    </item>
    
    <item>
      <title>신뢰성, 확장성, 유지보수성을 가진 애플리케이션</title>
      <link>https://eoriented.github.io/post/reliable-scalable-and-maintainable-applications/</link>
      <pubDate>Sun, 14 Jul 2019 18:31:01 +0900</pubDate>
      <author>eoriented@gmail.com (eoriented)</author>
      <guid>https://eoriented.github.io/post/reliable-scalable-and-maintainable-applications/</guid>
      <description>Compute-intensive(계산 중심) vs Data-intensive(데이터 중심) 과거에는 CPU 성능이 애플리케이션을 제한하는 요소였지만 오늘날에는 그렇지 않습니다. 최근에는 데이터의 양, 데이터의 복잡도, 데이터의 변화 속도가 애플리케이션을 제한하는 요소가 되었습니다. 이렇게 애플리케이션에서 사용하는 데이터의 특징에 맞춰서 설계를 해야 합니다. 그래서 이러한 애플리케이션을 Data-intensive application(데이터 중심 애플리케이션)이라고 합니다.</description>
    </item>
    
  </channel>
</rss>