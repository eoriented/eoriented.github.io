<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Database internals on Smart Tiger&#39;s blog</title>
    <link>https://eoriented.github.io/subcategories/database-internals/</link>
    <description>Recent content in Database internals on Smart Tiger&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-KR</language>
    <managingEditor>eoriented@gmail.com (eoriented)</managingEditor>
    <webMaster>eoriented@gmail.com (eoriented)</webMaster>
    <lastBuildDate>Sat, 03 Apr 2021 22:12:02 +0900</lastBuildDate>
    
	<atom:link href="https://eoriented.github.io/subcategories/database-internals/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>로그 구조 스토리지(Log Structured Storage)</title>
      <link>https://eoriented.github.io/post/log-structured-storage/</link>
      <pubDate>Sat, 03 Apr 2021 22:12:02 +0900</pubDate>
      <author>eoriented@gmail.com (eoriented)</author>
      <guid>https://eoriented.github.io/post/log-structured-storage/</guid>
      <description>회계사는 기록을 수정해야 하면 이미 입력된 값을 지우지 않고 새로운 값을 다시 씁니다. 최종 결과를 구하려면 모든 항목을 재검토하고 합계액을 계산해야 합니다. 이러한 방식은 바로 오늘 포스트에서 살펴볼 로그 구조 스토리지(Log-Structured Storage)와 유사합니다.
또 다른 예로는 불변 스토리지(immutable storage)가 있습니다.</description>
    </item>
    
    <item>
      <title>데이터베이스 소개 및 훑어보기</title>
      <link>https://eoriented.github.io/post/database-overview/</link>
      <pubDate>Sat, 20 Mar 2021 18:13:58 +0900</pubDate>
      <author>eoriented@gmail.com (eoriented)</author>
      <guid>https://eoriented.github.io/post/database-overview/</guid>
      <description>데이터베이스 시스템의 선택은 중요합니다. 성능, 일관성 문제, 운영의 어려움과 같은 이유로 데이터베이스를 변경하게 되는 경우가 발생할 수 있습니다. 데이터베이스를 변경할 때 마이그레이션이 쉽지 않을 수도 있기 때문에 초기 설계 단계에서 애플리케이션의 특성에 알맞는 데이터베이스를 선택해야 합니다.</description>
    </item>
    
  </channel>
</rss>